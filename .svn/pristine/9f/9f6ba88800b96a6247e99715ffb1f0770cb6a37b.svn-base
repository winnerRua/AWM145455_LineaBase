using GrupoCoen.Corporativo.Libraries.ConexionBD;
using Microsoft.Extensions.Configuration;
using Newtonsoft.Json.Linq;
using System;
using System.Globalization;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using WSREGPROXY.Helpers;
using WSREGPROXY.Services;
using System.Net;
using System.IO;

namespace WSREGAWM.Helpers
{
    public class UtileriasAWM
    {
        
        internal string encontrarValorNodo(JObject jObject, string nodo)
        {
            string value = string.Empty;
            bool isValueFinded = false;

            foreach (var jitem in jObject)
            {
                if (isValueFinded)
                    break;

                if (jitem.Value.Type == JTokenType.Object)
                {
                    if (jitem.Key.ToString() == nodo)
                    {
                        value = jitem.Value.ToString();
                        isValueFinded = true;
                        break;
                    }
                    var jSubObject = (JObject)jitem.Value;
                    foreach (var jsubitem in jSubObject)
                    {
                        if (jsubitem.Key.ToString() == nodo)
                        {
                            value = jsubitem.Value.ToString();
                            isValueFinded = true;
                            break;
                        }
                        else if (jsubitem.Value.Type == JTokenType.Object)
                        {
                            value = encontrarValorNodo((JObject)jsubitem.Value, nodo);
                            isValueFinded = true;
                            break;
                        }

                    }
                }
                else
                {
                    if (jitem.Key.ToString() == nodo)
                    {
                        value = jitem.Value.ToString();
                        isValueFinded = true;
                        break;
                    }
                }
            }
            return value;
        }
        internal string encontrarValor(JObject jObject, string nodo)
        {
            string value = string.Empty;
            bool isValueFinded = false;

            foreach (var jitem in jObject)
            {
                if (isValueFinded)
                    break;

                if (jitem.Value.Type == JTokenType.Object)
                {
                    if (jitem.Key.ToString() == nodo)
                    {
                        value = jitem.Value.ToString();
                        isValueFinded = true;
                        break;
                    }
                    var jSubObject = (JObject)jitem.Value;
                    foreach (var jsubitem in jSubObject)
                    {
                        if (jsubitem.Key.ToString() == nodo)
                        {
                            value = jsubitem.Value.ToString();
                            isValueFinded = true;
                            break;
                        }
                        else if (jsubitem.Value.Type == JTokenType.Object)
                        {
                            value = encontrarValorNodo((JObject)jsubitem.Value, nodo);
                            isValueFinded = true;
                            break;
                        }

                    }
                }
                else
                {
                    if (jitem.Key.ToString() == nodo)
                    {
                        value = jitem.Value.ToString();
                        isValueFinded = true;
                        break;
                    }
                }
            }
            return value;
        }
        internal string getAppSettingsKey(string KeyName, IConfiguration _config, string keySection = "AppSettings")
        {
            try
            {
                if (string.IsNullOrEmpty(KeyName))
                    throw new Exception();
                return _config.GetValue<string>(keySection + ":" + KeyName);
            }
            catch
            {
                return string.Empty;
            }
        }
        internal string getPropertyValue(string compoundProperty, JObject myObject)
        {
            string[] bits = compoundProperty.Split('.');

            for (int i = 0; i < bits.Length - 1; i++)
            {
                var auxObject = myObject.Properties().Where(prop => prop.Name == bits[i]).FirstOrDefault()?.Value?.ToString();
                if (!string.IsNullOrEmpty(auxObject))
                    myObject = JObject.Parse(auxObject);
            }

            return myObject.Properties().Where(prop => prop.Name == bits[bits.Length - 1]).FirstOrDefault()?.Value?.ToString();
        }

        internal void SaveLog(dynamic pMetadata, string identificadorEvento, string keyEvent, int ComponentID, IConfiguration _config)
        {
            try
            {
                string oError = string.Empty;
                SaveLogDataDelegate.SaveLogDataDelegateAsync(pMetadata, identificadorEvento, keyEvent, ComponentID, _config);
            }
            catch (Exception ex)
            {
                throw (ex);
            }
        }

        internal void autorizadorRest(int id, string oError)
        {
            var url = $"http://localhost:8080/item/{id}";//La URL debe venir de appsettings //Preguntar como consumir acá el AUTORIZADOR 
            //Probar con esta URL https://reqres.in/api/users?page=2

            var request = (HttpWebRequest)WebRequest.Create(url);
            request.Method = "POST";
            request.ContentType = "application/json";
            request.Accept = "application/json";

            try
            {
                using (WebResponse response = request.GetResponse())
                {
                    using (Stream strReader = response.GetResponseStream())
                    {
                        if (strReader == null) return;
                        using (StreamReader objReader = new StreamReader(strReader))
                        {
                            string responseBody = objReader.ReadToEnd();
                            //Console.WriteLine(responseBody);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                //responseRemesador = utiProxy.BuildResponse(ACGError.RequestIsNullOrEmpty, ex.Message, agency_code, sub_agent_user);
                ////utiProxy.SaveLog(responseRemesador, "1", Key, 1, _config);
                //oError = responseRemesador;
                //oError = ex.Message;
            }
        }

        internal dynamic tipoTrans(string Request, string tipo)
        {
            string paisValidacion = String.Empty;
            string guardaTransaccion = String.Empty;
            var tasa = 1;
            var mijObject = JObject.Parse(Request);

            if(tipo == "ENVIO")
            {
                Dictionary<dynamic, dynamic> ENVIO = new Dictionary<dynamic, dynamic>();
                ENVIO.Add("PaisValidacion", getPropertyValue("header.country_code", mijObject));
                //ENVIO.Add("tipoTransaccion", miUtilerias.getPropertyValue("header.terminal_id", mijObject));
                //ENVIO.Add("guardaTransaccion", miUtilerias.getPropertyValue("header.country_code", mijObject));
                ENVIO.Add("IdTerminal", getPropertyValue("header.terminal_id", mijObject));
                ENVIO.Add("PaisID", getPropertyValue("header.originating_country_id", mijObject));
                ENVIO.Add("NumeroOperador", getPropertyValue("send-money-store-request.operator", mijObject));
                ENVIO.Add("AgenciaID", getPropertyValue("header.agency_id", mijObject));
                ENVIO.Add("MTCN", getPropertyValue("send-money-store-request.mtcn", mijObject));
                ENVIO.Add("PaisRem", getPropertyValue("send-money-store-request.sender.address.country_code.country_name", mijObject));
                ENVIO.Add("EstadoRem", getPropertyValue("send-money-store-request.sender.address.state", mijObject));
                ENVIO.Add("CiudadRem", getPropertyValue("send-money-store-request.sender.address.city", mijObject));
                ENVIO.Add("PrimerNombreRem", getPropertyValue("send-money-store-request.sender.name.first_name", mijObject));

                ENVIO.Add("PrimerApellidoRem", getPropertyValue("send-money-store-request.sender.name.paternal_name", mijObject));
                ENVIO.Add("SegundoNombreRem", getPropertyValue("send-money-store-request.sender.name.middle_name", mijObject));
                ENVIO.Add("SegundoApellidoRem", getPropertyValue("send-money-store-request.sender.name.maternal_name", mijObject));
                ENVIO.Add("ApellidoCasadaRem", getPropertyValue("send-money-store-request.sender.name.married_name", mijObject));
                ENVIO.Add("Remitente", getPropertyValue("send-money-store-request.sender.name.given_name", mijObject) + " " + getPropertyValue("send-money-store-request.sender.name.paternal_name", mijObject) + " " + getPropertyValue("send-money-store-request.sender.name.maternal_name", mijObject));
                ENVIO.Add("PaisBen", getPropertyValue("send-money-store-request.receiver.address.country_code.country_name", mijObject));
                ENVIO.Add("EstadoBen", getPropertyValue("send-money-store-request.receiver.address.state", mijObject));
                ENVIO.Add("CiudadBen", getPropertyValue("send-money-store-request.receiver.address.city", mijObject));
                ENVIO.Add("PrimerNombreBen", getPropertyValue("send-money-store-request.receiver.name.first_name", mijObject));
                ENVIO.Add("PrimerApellidoBen", getPropertyValue("send-money-store-request.receiver.name.paternal_name", mijObject));

                ENVIO.Add("SegundoNombreBen", getPropertyValue("send-money-store-request.receiver.name.middle_name", mijObject));
                ENVIO.Add("SegundoApellidoBen", getPropertyValue("send-money-store-request.receiver.name.maternal_name", mijObject));
                ENVIO.Add("ApellidoCasadaBen", getPropertyValue("send-money-store-request.receiver.name.married_name", mijObject));
                ENVIO.Add("Beneficiario", getPropertyValue("send-money-store-request.receiver.name.give_name", mijObject) + " " + getPropertyValue("send-money-store-request.receiver.name.paternal_name", mijObject) + " " + getPropertyValue("send-money-store-request.receiver.name.maternal_name", mijObject));
                ENVIO.Add("TipoDocumento", getPropertyValue("send-money-store-request.sender.compliance_details.id_details.id_type", mijObject));
                ENVIO.Add("NumeroDocumento", getPropertyValue("send-money-store-request.sender.compliance_details.id_details.id_number", mijObject));
                ENVIO.Add("EmitidoPor", getPropertyValue("send-money-store-request.sender.compliance_details.id_details.id_country_of_issue", mijObject));
                ENVIO.Add("LugarEmision", getPropertyValue("send-money-store-request.sender.compliance_details.id_details.id_place_of_issue", mijObject));
                ENVIO.Add("FechaEmision", DateTime.ParseExact(getPropertyValue("send-money-store-request.sender.compliance_details.id_issue_date", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));
                ENVIO.Add("FechaExpiracion", DateTime.ParseExact(getPropertyValue("send-money-store-request.sender.compliance_details.id_expiration_date", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));

                ENVIO.Add("Nacionalidad", getPropertyValue("send-money-store-request.sender.address.country_code.country_name", mijObject));
                ENVIO.Add("DirLinea1", getPropertyValue("send-money-store-request.sender.address.addr_line1", mijObject));
                ENVIO.Add("DirLinea2", getPropertyValue("send-money-store-request.sender.address.addr_line2", mijObject));
                var indicaciones = getPropertyValue("send-money-store-request.sender.address.addr_line1", mijObject) + " " + getPropertyValue("send-money-store-request.sender.address.addr_line2", mijObject);
                ENVIO.Add("Indicaciones", indicaciones);
                ENVIO.Add("Sexo", getPropertyValue("send-money-store-request.sender.gender", mijObject));
                var estadoCivil = getPropertyValue("send-money-store-request.sender.compliance_details.Marital_Status", mijObject);
                switch (estadoCivil)
                {
                    case "Common-law marriage":
                        estadoCivil = "U";
                        break;

                    case "Married":
                        estadoCivil = "C";
                        break;
                    case "Widow":
                        estadoCivil = "V";
                        break;
                    default:
                        estadoCivil = getPropertyValue("send-money-store-request.sender.compliance_details.Marital_Status", mijObject).ToString().Substring(0, 1);
                        break;
                }
                ENVIO.Add("EstadoCivil", estadoCivil);
                ENVIO.Add("FechaNacimiento", DateTime.ParseExact(getPropertyValue("send-money-store-request.sender.date_of_birth", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));
                ENVIO.Add("Profesion", getPropertyValue("send-money-store-request.sender.compliance_details.occupation", mijObject));
                ENVIO.Add("LugarTrabajo", getPropertyValue("send-money-store-request.sender.compliance_details.Name_of_Employer_Business", mijObject));
                ENVIO.Add("TipoTelefono", getPropertyValue("send-money-store-request.sender.phone_type", mijObject));

                ENVIO.Add("NumeroTelefono", getPropertyValue("send-money-store-request.sender.contact_phone", mijObject));
                ENVIO.Add("Dato1", getPropertyValue("send-money-store-request.sender.compliance_details.additional_info.source_of_funds", mijObject) + " " + getPropertyValue("send-money-store-request.sender.compliance_details.additional_info.destination_of_funds", mijObject));
                ENVIO.Add("Dato2", getPropertyValue("send-money-store-request.sender.compliance_details.additional_info.type_of_relationship", mijObject) + " " + getPropertyValue("send-money-store-request.sender.compliance_details.additional_info.is_not_final_sender_receiver", mijObject));
                ENVIO.Add("ClienteID", 1);
                ENVIO.Add("CtaAgencia", getPropertyValue("header.agency_account", mijObject));
                ENVIO.Add("CtaBanco", 0);
                var moneda = getPropertyValue("send-money-store-request.payment_details.originating_country_currency.iso_code.currency_code", mijObject);
                if (moneda == "USD")
                {
                    decimal montoPrincipal = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.originators_principal_amount", mijObject));
                    decimal monto = montoPrincipal / 100;
                    ENVIO.Add("Monto", monto);
                    ENVIO.Add("MontoML", monto * tasa);
                    ENVIO.Add("Tasa", tasa);
                    decimal cargos = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.charges", mijObject)) / 100;
                    ENVIO.Add("Cargos", cargos);

                    ENVIO.Add("CargosML", cargos * tasa);
                    decimal pCharge = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.plus_charges_amount", mijObject)) / 100;
                    ENVIO.Add("CargosxEntrega", pCharge);
                    ENVIO.Add("CargosxEntregaML", pCharge * tasa);
                    decimal mCharges = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.message_charge", mijObject)) / 100;
                    ENVIO.Add("CargosxMensaje", mCharges);
                    ENVIO.Add("CargosxMensajeML", mCharges * tasa);
                    decimal mun_tax = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.taxes.municipal_tax", mijObject));
                    decimal st_tax = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.taxes.state_tax", mijObject));
                    decimal coun_tax = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.taxes.county_tax", mijObject));
                    decimal tax = (mun_tax + st_tax + coun_tax) / 100;
                    ENVIO.Add("Impuesto", tax);

                    decimal impuestoML = tax * tasa;
                    ENVIO.Add("ImpuestoML", impuestoML);
                }
                else
                {
                    decimal montoPrincipal = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.originators_principal_amount", mijObject));
                    decimal monto = montoPrincipal / 100;
                    ENVIO.Add("Monto", monto / tasa);
                    ENVIO.Add("MontoML", monto);
                    ENVIO.Add("Tasa", tasa);
                    decimal cargos = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.charges", mijObject)) / 100;
                    ENVIO.Add("Cargos", cargos / tasa);

                    ENVIO.Add("CargosML", cargos);
                    decimal pCharge = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.plus_charges_amount", mijObject)) / 100;
                    ENVIO.Add("CargosxEntrega", pCharge / tasa);
                    ENVIO.Add("CargosxEntregaML", pCharge);
                    decimal mCharges = Convert.ToDecimal(getPropertyValue("send-money-store-request.financials.message_charge", mijObject)) / 100;
                    ENVIO.Add("CargosxMensaje", mCharges / tasa);
                    ENVIO.Add("CargosxMensajeML", mCharges);
                    double mun_tax = Convert.ToDouble(getPropertyValue("send-money-store-request.financials.taxes.municipal_tax", mijObject));
                    double st_tax = Convert.ToDouble(getPropertyValue("send-money-store-request.financials.taxes.state_tax", mijObject));
                    double coun_tax = Convert.ToDouble(getPropertyValue("send-money-store-request.financials.taxes.county_tax", mijObject));
                    var tax = (mun_tax + st_tax + coun_tax) / 100;
                    ENVIO.Add("Impuesto", tax / tasa);
                    ENVIO.Add("ImpuestoML", tax);
                }

                ENVIO.Add("WUCard", getPropertyValue("send-money-store-request.sender.preferred_customer.account_nbr", mijObject));
                ENVIO.Add("NumFact", getPropertyValue("header.bill_data.number", mijObject));
                ENVIO.Add("NameFact", getPropertyValue("header.bill_data.name", mijObject));

                ENVIO.Add("DirFact", getPropertyValue("header.bill_data.address", mijObject));
                ENVIO.Add("NIT", getPropertyValue("header.bill_data.nit", mijObject));
                ENVIO.Add("Serie", getPropertyValue("header.bill_data.series", mijObject));
                var paisSender = getPropertyValue("send-money-store-request.sender.address.country_code.country_name", mijObject);
                var paisReceiver = getPropertyValue("send-money-store-request.receiver.address.country_code.country_name", mijObject);
                int tipoEnvio = 0;
                if (paisSender == paisReceiver)
                {
                    tipoEnvio = 1;
                }
                else
                {
                    tipoEnvio = 2;
                }
                ENVIO.Add("TipoEnvio", tipoEnvio);
                ENVIO.Add("EstatusAct", "");
                ENVIO.Add("EstatusSet", "");
                ENVIO.Add("UsuarioID", 1);
                ENVIO.Add("FechaEnvio", DateTime.Today);
                ENVIO.Add("Fecha", DateTime.Today);
                ENVIO.Add("FechaCreacion", DateTime.Today);

                return ENVIO;
            }
            else if (tipo == "PAGO")
            {
                Dictionary<dynamic, dynamic> PAGO = new Dictionary<dynamic, dynamic>();
                PAGO.Add("PaisValidacion", getPropertyValue("header.country_code", mijObject));
                //PAGO.Add("tipoTransaccion", miUtilerias.getPropertyValue("header.terminal_id", mijObject));
                //PAGO.Add("guardaTransaccion", miUtilerias.getPropertyValue("header.country_code", mijObject));
                PAGO.Add("IdTerminal", getPropertyValue("header.terminal_id", mijObject));
                PAGO.Add("PaisID", getPropertyValue("header.originating_country_id", mijObject));
                PAGO.Add("NumeroOperador", getPropertyValue("receive-money-pay-request.operator", mijObject));
                PAGO.Add("AgenciaID", getPropertyValue("header.agency_id", mijObject));
                PAGO.Add("MTCN", getPropertyValue("receive-money-pay-request.mtcn", mijObject));
                PAGO.Add("PaisRem", getPropertyValue("header.sender.address.country_name", mijObject));
                PAGO.Add("EstadoRem", getPropertyValue("header.sender.address.state", mijObject));
                PAGO.Add("CiudadRem", getPropertyValue("header.sender.address.city", mijObject));
                PAGO.Add("PrimerNombreRem", getPropertyValue("header.sender.name.first_name", mijObject));

                PAGO.Add("PrimerApellidoRem", getPropertyValue("header.sender.name.paternal_name", mijObject));
                PAGO.Add("SegundoNombreRem", getPropertyValue("header.sender.name.middle_name", mijObject));
                PAGO.Add("SegundoApellidoRem", getPropertyValue("header.sender.name.maternal_name", mijObject));
                PAGO.Add("ApellidoCasadaRem", getPropertyValue("header.sender.name.married_name", mijObject));
                PAGO.Add("Remitente", getPropertyValue("header.sender.name.given_name", mijObject) + " " + getPropertyValue("header.sender.name.paternal_name", mijObject) + " " + getPropertyValue("header.sender.name.maternal_name", mijObject));
                PAGO.Add("PaisBen", getPropertyValue("receive-money-pay-request.receiver.address.country_code.country_name", mijObject));
                PAGO.Add("EstadoBen", getPropertyValue("receive-money-pay-request.receiver.address.state", mijObject));
                PAGO.Add("CiudadBen", getPropertyValue("receive-money-pay-request.receiver.address.city", mijObject));
                PAGO.Add("PrimerNombreBen", getPropertyValue("receive-money-pay-request.receiver.name.first_name", mijObject));
                PAGO.Add("PrimerApellidoBen", getPropertyValue("receive-money-pay-request.receiver.name.paternal_name", mijObject));

                PAGO.Add("SegundoNombreBen", getPropertyValue("receive-money-pay-request.receiver.name.middle_name", mijObject));
                PAGO.Add("SegundoApellidoBen", getPropertyValue("receive-money-pay-request.receiver.name.maternal_name", mijObject));
                PAGO.Add("ApellidoCasadaBen", getPropertyValue("receive-money-pay-request.receiver.name.married_name", mijObject));
                PAGO.Add("Beneficiario", getPropertyValue("receive-money-pay-request.receiver.name.given_name", mijObject) + " " + getPropertyValue("receive-money-pay-request.receiver.name.paternal_name", mijObject) + " " + getPropertyValue("receive-money-pay-request.receiver.name.maternal_name", mijObject));
                PAGO.Add("TipoDocumento", getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_details.id_type", mijObject));
                PAGO.Add("NumeroDocumento", getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_details.id_number", mijObject));
                PAGO.Add("EmitidoPor", getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_details.id_country_of_issue", mijObject));
                PAGO.Add("LugarEmision", getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_details.id_place_of_issue", mijObject));
                PAGO.Add("FechaEmision", DateTime.ParseExact(getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_issue_date", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));
                PAGO.Add("FechaExpiracion", DateTime.ParseExact(getPropertyValue("receive-money-pay-request.receiver.compliance_details.id_expiration_date", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));

                PAGO.Add("Nacionalidad", getPropertyValue("receive-money-pay-request.receiver.address.country_code.country_name", mijObject));
                PAGO.Add("DirLinea1", getPropertyValue("receive-money-pay-request.receiver.compliance_details.Current_address.addr_line1", mijObject));
                PAGO.Add("DirLinea2", getPropertyValue("receive-money-pay-request.receiver.compliance_details.Current_address.addr_line2", mijObject));
                var indicaciones = getPropertyValue("receive-money-pay-request.receiver.compliance_details.Current_address.addr_line1", mijObject) + " " + getPropertyValue("receive-money-pay-request.receiver.compliance_details.Current_address.addr_line2", mijObject);
                PAGO.Add("Indicaciones", indicaciones);
                PAGO.Add("Sexo", getPropertyValue("receive-money-pay-request.receiver.compliance_details.Gender", mijObject));
                var estadoCivil = getPropertyValue("receive-money-pay-request.receiver.compliance_details.Marital_Status", mijObject);
                switch (estadoCivil)
                {
                    case "Common-law marriage":
                        estadoCivil = "U";
                        break;

                    case "Married":
                        estadoCivil = "C";
                        break;
                    case "Widow":
                        estadoCivil = "V";
                        break;
                    default:
                        estadoCivil = getPropertyValue("receive-money-pay-request.receiver.compliance_details.Marital_Status", mijObject).ToString().Substring(0, 1);
                        break;
                }
                PAGO.Add("EstadoCivil", estadoCivil);
                PAGO.Add("FechaNacimiento", DateTime.ParseExact(getPropertyValue("receive-money-pay-request.receiver.compliance_details.date_of_birth", mijObject), "ddMMyyyy", CultureInfo.InvariantCulture));
                PAGO.Add("Profesion", getPropertyValue("receive-money-pay-request.receiver.compliance_details.occupation", mijObject));
                PAGO.Add("LugarTrabajo", getPropertyValue("receive-money-pay-request.receiver.compliance_details.Name_of_Employer_Business", mijObject));
                PAGO.Add("TipoTelefono", getPropertyValue("receive-money-pay-request.receiver.phone_type", mijObject));

                PAGO.Add("NumeroTelefono", getPropertyValue("receive-money-pay-request.receiver.compliance_details.contact_phone", mijObject));
                PAGO.Add("Dato1", getPropertyValue("receive-money-pay-request.receiver.compliance_details.additional_info.source_of_funds", mijObject) + " " + getPropertyValue("receive-money-pay-request.receiver.compliance_details.additional_info.destination_of_funds", mijObject));
                PAGO.Add("Dato2", getPropertyValue("receive-money-pay-request.receiver.compliance_details.additional_info.type_of_relationship", mijObject) + " " + getPropertyValue("receive - money - pay - request.receiver.compliance_details.additional_info.age", mijObject));
                PAGO.Add("ClienteID", 1);
                PAGO.Add("CtaAgencia", getPropertyValue("header.agency_code", mijObject));
                PAGO.Add("CtaBanco", 0);
                var moneda = getPropertyValue("receive-money-pay-request.payment_details.destination_country_currency.iso_code.currency_code", mijObject);
                if (moneda == "USD")
                {
                    decimal montoPrincipal = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.principal_amount", mijObject));
                    decimal monto = montoPrincipal / 100;
                    PAGO.Add("Monto", monto);
                    PAGO.Add("MontoML", monto * tasa);
                    PAGO.Add("Tasa", tasa);
                    decimal cargos = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.charges", mijObject)) / 100;
                    PAGO.Add("Cargos", cargos);

                    PAGO.Add("CargosML", cargos * tasa);
                    decimal pCharge = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.charges", mijObject)) / 100;
                    PAGO.Add("CargosxEntrega", pCharge);
                    PAGO.Add("CargosxEntregaML", pCharge * tasa);
                    decimal mCharges = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.message_charge", mijObject)) / 100;
                    PAGO.Add("CargosxMensaje", mCharges);
                    PAGO.Add("CargosxMensajeML", mCharges * tasa);
                    decimal mun_tax = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.taxes.municipal_tax", mijObject));
                    decimal st_tax = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.taxes.state_tax", mijObject));
                    decimal coun_tax = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.taxes.county_tax", mijObject));
                    decimal tax = (mun_tax + st_tax + coun_tax) / 100;
                    PAGO.Add("Impuesto", tax);

                    decimal impuestoML = tax * tasa;
                    PAGO.Add("ImpuestoML", impuestoML);
                }
                else
                {
                    decimal montoPrincipal = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.principal_amount", mijObject));
                    decimal monto = montoPrincipal / 100;
                    PAGO.Add("Monto", monto / tasa);
                    PAGO.Add("MontoML", monto);
                    PAGO.Add("Tasa", tasa);
                    decimal cargos = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.charges", mijObject)) / 100;
                    PAGO.Add("Cargos", cargos / tasa);

                    PAGO.Add("CargosML", cargos);
                    decimal pCharge = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.plus_charges_amount", mijObject)) / 100;
                    PAGO.Add("CargosxEntrega", pCharge / tasa);
                    PAGO.Add("CargosxEntregaML", pCharge);
                    decimal mCharges = Convert.ToDecimal(getPropertyValue("receive-money-pay-request.financials.message_charge", mijObject)) / 100;
                    PAGO.Add("CargosxMensaje", mCharges / tasa);
                    PAGO.Add("CargosxMensajeML", mCharges);
                    double mun_tax = Convert.ToDouble(getPropertyValue("receive-money-pay-request.financials.taxes.municipal_tax", mijObject));
                    double st_tax = Convert.ToDouble(getPropertyValue("receive-money-pay-request.financials.taxes.state_tax", mijObject));
                    double coun_tax = Convert.ToDouble(getPropertyValue("receive-money-pay-request.financials.taxes.county_tax", mijObject));
                    var tax = (mun_tax + st_tax + coun_tax) / 100;
                    PAGO.Add("Impuesto", tax / tasa);
                    PAGO.Add("ImpuestoML", tax);
                }

                PAGO.Add("WUCard", getPropertyValue("receive-money-pay-request.receiver.preferred_customer.account_nbr", mijObject));
                PAGO.Add("NumFact", getPropertyValue("header.bill_data.number", mijObject));
                PAGO.Add("NameFact", getPropertyValue("header.bill_data.name", mijObject));

                PAGO.Add("DirFact", getPropertyValue("header.bill_data.address", mijObject));
                PAGO.Add("NIT", getPropertyValue("header.bill_data.nit", mijObject));
                PAGO.Add("Serie", getPropertyValue("header.bill_data.series", mijObject));
                var paisSender = getPropertyValue("header.sender.address.country_name", mijObject);
                var paisReceiver = getPropertyValue("receive-money-pay-request.receiver.address.country_code.country_name", mijObject);
                int tipoEnvio = 0;
                if (paisSender == paisReceiver)
                {
                    tipoEnvio = 1;
                }
                else
                {
                    tipoEnvio = 2;
                }
                PAGO.Add("TipoEnvio", tipoEnvio);
                PAGO.Add("EstatusAct", "");
                PAGO.Add("EstatusSet", "");
                PAGO.Add("UsuarioID", 1);
                PAGO.Add("FechaEnvio", DateTime.Today);
                PAGO.Add("Fecha", DateTime.Today);
                PAGO.Add("FechaCreacion", DateTime.Today);

                return PAGO;
            }
            return "Operación no ejecutada, revise o comuníquise con el administrador.";
        }            
    }
}


//public bool ObtenerValoresAgencia(ClsVariables v, string CodigoAgencia, string Producto, ref string Oerror)
//{
//    //objetos y variables
//    string dbalias = ConfigurationManager.AppSettings["dbalias"];
//    MSSQLConnection connection = new MSSQLConnection(dbalias);
//    DataTable oTable = new DataTable("Datos");
//    string cadena = string.Empty;

//    #region Variables por si el producto no es wu ni vigo
//    string producto = string.Empty;
//    string Operaciones = System.Configuration.ConfigurationManager.AppSettings["productos"];
//    string[] array = Operaciones.Split(',');
//    string operacion = string.Empty;
//    #endregion

//    try
//    {
//        switch (Producto)
//        {
//            case "wu":
//                producto = "2";
//                break;

//            case "vigo":
//                producto = "6";
//                break;

//            default:
//                for (int i = 0; i < array.Length; i++)
//                {
//                    if (Producto == Convert.ToString(array[i]).ToLower())
//                    {
//                        cadena = string.Format("select top 1 ProductID  from pos_Product where ProductShortName = '{0}' ", Producto);
//                        try
//                        {
//                            connection.executeQuery(cadena, MSSQLConnection.ReturnTypes.Dataset);
//                            if (connection.getMessage() == "")
//                            {
//                                oTable = connection.getDataset().Tables[0];
//                                if (oTable is null || oTable.Rows.Count <= 0)
//                                {
//                                    producto = "0";
//                                }
//                                foreach (DataRow row in oTable.Rows)
//                                {
//                                    producto = row[0].ToString();
//                                }
//                            }

//                        }
//                        catch (Exception ex)
//                        {

//                            producto = "0";
//                        }

//                        break;
//                    }
//                }
//                break;
//        }

//        switch (v.TipoCuenta)
//        {
//            case "ML":
//                cadena = string.Format("select top 1 acd.CounterId,acd.TerminalId,acd.CuentaML,ac.Agency_id,acc.user1,acc.password1 from AgencyCode ac inner join AgencyCodeDetails acd on ac.IdCodigo=acd.IdCodigo inner join AgencyCodeCredentials acc on ac.IdCodigo = acc.idCode where ac.AgencyCode = '{0}' and acd.IdProducto='{1}' ", CodigoAgencia, producto);
//                break;

//            case "USD":
//                cadena = string.Format("select top 1 acd.CounterId,acd.TerminalId,acd.CuentUSD,ac.Agency_id,acc.user1,acc.password1 from AgencyCode ac inner join AgencyCodeDetails acd on ac.IdCodigo=acd.IdCodigo inner join AgencyCodeCredentials acc on ac.IdCodigo = acc.idCode where ac.AgencyCode = '{0}' and acd.IdProducto='{1}' ", CodigoAgencia, producto);
//                break;

//            default:
//                return false;
//        }

//        connection.executeQuery(cadena, MSSQLConnection.ReturnTypes.Dataset);

//        if (connection.getMessage() == "")
//        {
//            oTable = connection.getDataset().Tables[0];
//            if (oTable is null || oTable.Rows.Count <= 0)
//            {
//                return false;
//            }

//            foreach (DataRow row in oTable.Rows)
//            {
//                v.counter_id = row[0].ToString();
//                v.terminal_id = row[1].ToString();
//                v.cuenta = row[2].ToString();
//                v.agency_id = row[3].ToString();
//                v.usuario = row[4].ToString();
//                v.contrasena = row[5].ToString();
//            }
//        }

//        else
//        {
//            Oerror = connection.getMessage();
//            return false;
//        }

//    }
//    catch (Exception ex)
//    {
//        Oerror = ex.Message;
//        return false;
//    }

//    return true;
//}

